// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArticulateDown.h"
#include "Commands/ArticulateUp.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Fire.h"
#include "Commands/IndexFrisbee.h"
#include "Commands/IndexManualFwd.h"
#include "Commands/InjectFrisbee.h"
#include "Commands/InjectManualBack.h"
#include "Commands/InjectManualFwd.h"
#include "Commands/Launch.h"
#include "Commands/MoveBelt.h"
#include "Commands/MoveShoulder.h"
#include "Commands/RunInjectorBack.h"
#include "Commands/RunInjectorFwd.h"
#include "Commands/SpinDownLaunch.h"
#include "Commands/SpinUpLauncher.h"
#include "Commands/TeleopDrive.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	joy4 = new Joystick(4);
	
	indexFwd = new JoystickButton(joy4, 9);
	indexFwd->WhileHeld(new IndexManualFwd());
	injectorBack = new JoystickButton(joy4, 8);
	injectorBack->WhileHeld(new InjectManualBack());
	injectorFwd = new JoystickButton(joy4, 7);
	injectorFwd->WhileHeld(new InjectManualFwd());
	fireButton2 = new JoystickButton(joy4, 1);
	fireButton2->WhileHeld(new Fire());
	startShooterButton2 = new JoystickButton(joy4, 2);
	startShooterButton2->WhileHeld(new SpinUpLauncher());
	articulateDownButton2 = new JoystickButton(joy4, 12);
	articulateDownButton2->WhileHeld(new ArticulateDown());
	articulateUpButton2 = new JoystickButton(joy4, 11);
	articulateUpButton2->WhileHeld(new ArticulateUp());
	joy3 = new Joystick(3);
	
	joy2 = new Joystick(2);
	
	fireButton1 = new JoystickButton(joy2, 1);
	fireButton1->WhileHeld(new Fire());
	startShooterButton1 = new JoystickButton(joy2, 2);
	startShooterButton1->WhileHeld(new SpinUpLauncher());
	articulateDownButton1 = new JoystickButton(joy2, 12);
	articulateDownButton1->WhileHeld(new ArticulateDown());
	articulateUpButton1 = new JoystickButton(joy2, 11);
	articulateUpButton1->WhileHeld(new ArticulateUp());
	joy1 = new Joystick(1);
	
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("TeleopDrive", new TeleopDrive());
	SmartDashboard::PutData("MoveBelt", new MoveBelt());
	SmartDashboard::PutData("MoveShoulder", new MoveShoulder());
	SmartDashboard::PutData("IndexFrisbee", new IndexFrisbee());
	SmartDashboard::PutData("Launch", new Launch());
	SmartDashboard::PutData("SpinUpLauncher", new SpinUpLauncher());
	SmartDashboard::PutData("SpinDownLaunch", new SpinDownLaunch());
	SmartDashboard::PutData("Fire", new Fire());
	SmartDashboard::PutData("ArticulateUp", new ArticulateUp());
	SmartDashboard::PutData("ArticulateDown", new ArticulateDown());
	SmartDashboard::PutData("IndexManualFwd", new IndexManualFwd());
	SmartDashboard::PutData("InjectManualBack", new InjectManualBack());
	SmartDashboard::PutData("InjectManualFwd", new InjectManualFwd());
	SmartDashboard::PutData("RunInjectorFwd", new RunInjectorFwd());
	SmartDashboard::PutData("RunInjectorBack", new RunInjectorBack());
	SmartDashboard::PutData("InjectFrisbee", new InjectFrisbee());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getJoy4() {
	return joy4;
}
Joystick* OI::getJoy3() {
	return joy3;
}
Joystick* OI::getJoy2() {
	return joy2;
}
Joystick* OI::getJoy1() {
	return joy1;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
