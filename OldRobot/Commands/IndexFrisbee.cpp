// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "IndexFrisbee.h"

IndexFrisbee::IndexFrisbee() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::indexer);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void IndexFrisbee::Initialize() {
	endTime - Timer::GetFPGATimestamp() + 1;
	//endTime = Timer.getFPGATimestamp() + SmartDashboard.getnumber("Indexer Time", 1.0);
	Robot::indexer->set(-1.0);
}

// Called repeatedly when this Command is scheduled to run
void IndexFrisbee::Execute() {
	
}

// Make this return true when this Command no longer needs to run execute()
bool IndexFrisbee::IsFinished() {


	return Timer::GetFPGATimestamp() > endTime;
	//return Timer.getFPGATimestamp() > endTime;
}

// Called once after isFinished returns true
void IndexFrisbee::End() {
	Robot::indexer->set(0.0);

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void IndexFrisbee::Interrupted() {

}
