// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "RunInjectorBack.h"
RunInjectorBack::RunInjectorBack() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::injector);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void RunInjectorBack::Initialize() {
	Robot::injector->set(0.5);
	endTime = Timer::GetFPGATimestamp() + 0.3;
}
// Called repeatedly when this Command is scheduled to run
void RunInjectorBack::Execute() {
	Robot::injector->set(0.5);
	//printf("IsFinished: %d, getLimit: %d \n", IsFinished(), Robot::injector->getLimit());
	//printf("endtime: %f, time: %f \n", endTime, Timer::GetFPGATimestamp());
}
// Make this return true when this Command no longer needs to run execute()
bool RunInjectorBack::IsFinished() {
	//injector limit disabled: not installed
	return (Robot::injector->getLimit() && false) || (Timer::GetFPGATimestamp() > endTime);
}
// Called once after isFinished returns true
void RunInjectorBack::End() {
	Robot::injector->set(0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void RunInjectorBack::Interrupted() {
	Robot::injector->set(0);
}
